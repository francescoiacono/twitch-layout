/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TwitchLayoutIndexImport } from './routes/twitch-layout/index'
import { Route as TwitchLayoutWebcamImport } from './routes/twitch-layout/webcam'

// Create/Update Routes

const TwitchLayoutIndexRoute = TwitchLayoutIndexImport.update({
  id: '/twitch-layout/',
  path: '/twitch-layout/',
  getParentRoute: () => rootRoute,
} as any)

const TwitchLayoutWebcamRoute = TwitchLayoutWebcamImport.update({
  id: '/twitch-layout/webcam',
  path: '/twitch-layout/webcam',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/twitch-layout/webcam': {
      id: '/twitch-layout/webcam'
      path: '/twitch-layout/webcam'
      fullPath: '/twitch-layout/webcam'
      preLoaderRoute: typeof TwitchLayoutWebcamImport
      parentRoute: typeof rootRoute
    }
    '/twitch-layout/': {
      id: '/twitch-layout/'
      path: '/twitch-layout'
      fullPath: '/twitch-layout'
      preLoaderRoute: typeof TwitchLayoutIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/twitch-layout/webcam': typeof TwitchLayoutWebcamRoute
  '/twitch-layout': typeof TwitchLayoutIndexRoute
}

export interface FileRoutesByTo {
  '/twitch-layout/webcam': typeof TwitchLayoutWebcamRoute
  '/twitch-layout': typeof TwitchLayoutIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/twitch-layout/webcam': typeof TwitchLayoutWebcamRoute
  '/twitch-layout/': typeof TwitchLayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/twitch-layout/webcam' | '/twitch-layout'
  fileRoutesByTo: FileRoutesByTo
  to: '/twitch-layout/webcam' | '/twitch-layout'
  id: '__root__' | '/twitch-layout/webcam' | '/twitch-layout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  TwitchLayoutWebcamRoute: typeof TwitchLayoutWebcamRoute
  TwitchLayoutIndexRoute: typeof TwitchLayoutIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  TwitchLayoutWebcamRoute: TwitchLayoutWebcamRoute,
  TwitchLayoutIndexRoute: TwitchLayoutIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/twitch-layout/webcam",
        "/twitch-layout/"
      ]
    },
    "/twitch-layout/webcam": {
      "filePath": "twitch-layout/webcam.tsx"
    },
    "/twitch-layout/": {
      "filePath": "twitch-layout/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
